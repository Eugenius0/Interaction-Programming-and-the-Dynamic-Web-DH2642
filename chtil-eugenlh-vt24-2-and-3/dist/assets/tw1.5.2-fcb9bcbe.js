import{d}from"./dishesConst-c8e864fd.js";import{b as s,r as c,a as i}from"./teacherRender-7b65909b.js";import{g as o}from"./filesToTest-e54ca7e1.js";import"./shim-7e3475d3.js";import"./teacherFetch-a8835856.js";import"./mobx.esm-c867959f.js";import"./reactivity.esm-bundler-91732a87.js";const n="",a=i,m=(await o(`/src/${n}DinnerModel.js`))?.model,h=(await o(`/src/${a}js/${n}sidebarPresenter.jsx`))?.Sidebar,u=(await o(`/src/${a}js/${n}summaryPresenter.jsx`))?.Summary,t=s(m);c(React.createElement("div",null,"This is the final TW1 test, it displays the full App.",React.createElement("p",null," To make this fully interactive, you need to ",React.createElement("b",null,"handle custom events")," in the Sidebar presenter:"),React.createElement("ul",null,React.createElement("li",null,React.createElement("code",null,"onNumberChange")," should invoke the Model method that changes the number of guets"),React.createElement("li",null,"the two dish-related custom events fired by SidebarView: one should set the current dish on the Model, the other should remove a dish from the Model")),React.createElement("hr",null),React.createElement(h,{model:t}),React.createElement(u,{model:t}),React.createElement("hr",null),'Interact with your app! When the Model is changed by the custom event handlers, this test uses a Vue "reactive object" to update the app.',React.createElement("p",null,"The Model is exported into the ",React.createElement("code",null,"myModel")," global, so you can change the Model from the Console and see the changes in the UI. Test this at the Console: ",React.createElement("code",null,"myModel.setNumberOfGuests(3)"))),document.getElementById("root"));window.location.hash="#summary";window.myModel=t;function e(l){return d.find(function(r){return r.id===l})}window.myModel.addToMenu(e(200));window.myModel.addToMenu(e(2));window.myModel.addToMenu(e(100));window.myModel.addToMenu(e(1));window.myModel.setNumberOfGuests(5);
