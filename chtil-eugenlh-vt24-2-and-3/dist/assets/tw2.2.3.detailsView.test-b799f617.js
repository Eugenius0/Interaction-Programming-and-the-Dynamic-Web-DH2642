import{e as n}from"./index-6400038e.js";import{d as o}from"./mockFetch-ba9030b0.js";import{t as w,r as p,a as g}from"./testComponentTL-6fcfc331.js";import{g as m}from"./filesToTest-e54ca7e1.js";import{f as _}from"./findCustomEvents-18f41d5f.js";import{h as b}from"./runtime-core.esm-bundler-8a2f4052.js";import"./shim-7e3475d3.js";import"./util-004fc0f1.js";import"./vue.runtime.esm-bundler-12250fee.js";import"./runtime-dom.esm-bundler-9a021e8b.js";import"./reactivity.esm-bundler-91732a87.js";import"./index-7ea524dd.js";import"./index-93c19621.js";import"./index-37df3fb2.js";import"./client-eba7b630.js";import"./mobx.esm-c867959f.js";import"./jsxUtilities-a811c57a.js";const f="",a=(await m(`/src/views/${f}detailsView.vue`))?.DetailsView||(await m(`/src/views/${f}detailsView.jsx`))?.DetailsView;describe("TW2.2.3 Free rendering, fire custom events. Work with stacktraces: DetailsView [test Vue](/tw2.2.3.html) [React](/tw2.2.3-react.html)",function(){this.timeout(2e5);let l=3,d=!0;w({vue:a},[{dishData:o,guests:l,isDishInMenu:{disabled:d}}],"DetailsView renders dish price _and_ dish price for all guests",function(e,i){const t=new RegExp(o.pricePerServing),r=new RegExp(o.pricePerServing*l);n(e.queryByText(t).length,"The price of the dish is not rendered. Check the stacktrace to find what the test is searching for.").to.not.equal(0),n(e.queryAllByText(r).length,"pricePerServings should be also shown multiplied by the number of guests. Check the stacktrace to examine the test!").to.not.equal(0)},"DetailsView renders all ingredients (name, amount, measurement unit).",function(e,i){o.extendedIngredients.forEach(t=>{n(e.queryAllByText(new RegExp(t.name)).length,"ingredient names must be displayed. Could not find: "+t.name+" Check the stacktrace to find what the test is searching for").to.not.equal(0),n(e.queryAllByText(new RegExp(t.unit)).length,"Measurement units are not showing. Could not find: "+t.unit+" for ingredient "+t.name+" Check the stacktrace to find what the test is searching for").to.not.equal(0),n(e.queryAllByText(new RegExp(t.amount)).length,"Ingredient amount not found: "+t.amount+" for ingredient "+t.name+" . Ingredient amounts do not need to be multiplied by number of guests.").to.not.equal(0)})},"DetailsView renders cooking instructions",function(e,i){n(e.queryAllByText(new RegExp(o.instructions.slice(30,100))).length,"Cooking instructions not found. Check the stacktrace to find what the test is searching for.").to.not.equal(0)},"DetailsView has link to recipe",function(e,i){n(e.queryAllByRole("link").length,"link to original recipe not found.  Check the stacktrace to find what the test is searching for.").to.not.equal(0),n(e.queryAllByRole("link")[0].href,"expected link to be link to the origianl recipe").to.equal(o.sourceUrl)},"DetailsView renders dish image",function(e,i){n(e.queryAllByRole("img").length,"image of the dish was not found. Check the stacktrace to find what the test is searching for.").to.not.equal(0)},"DetailsView has button to add to menu, disabled if dish is in menu",function(e,i){const t=e.queryAllByRole("button");let r;t.forEach(u=>{(u?.textContent?.toLowerCase().includes("add")||u?.textContent?.toLowerCase().includes("menu"))&&(r=u)}),n(r,"add to menu button not found, looking for a button with label that contains 'add' and 'menu'").to.be.ok,n(r.__vnode.props.disabled.disabled,"'Add to menu' button must be disabled if the dish is already in the menu").to.equal(d)}),it("DetailsView 'add to menu' button fires a custom event",function(){a||this.skip();let e,i;e=_(a,{dishData:o,isDishInMenu:!0,guests:6}).button.filter(c=>c.customEventName)[0].customEventName,window.React={createElement:b};const u=p({components:{DetailsView:a},template:"<DetailsView/>"},{props:{dishData:o,isDishInMenu:!1,guests:6,[e]:function(){i=!0}},container:document.createElement("div")}).queryAllByRole("button").filter(c=>{const h=c.textContent.toLowerCase();return h.includes("add")||h.includes("menu")})[0];g.click(u),n(i,"the add to menu button should fire a custom event").to.equal(!0)}),it("DetailsView does not change its props during rendering",function(){a||this.skip();const e={dishData:o,guests:l,isDishInMenu:d},i=JSON.stringify(e);window.React={createElement(){return{}}},a(e),n(JSON.stringify(e),"DetailsView doesn't change its props during render").to.equal(i)})});
