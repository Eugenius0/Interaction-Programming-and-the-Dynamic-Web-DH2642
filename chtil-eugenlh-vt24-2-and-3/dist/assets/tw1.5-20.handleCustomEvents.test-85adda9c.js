import{d as o}from"./dishesConst-c8e864fd.js";import{e as t}from"./index-6400038e.js";import{m as c}from"./mockModel-b7c7107c.js";import{g as v}from"./filesToTest-e54ca7e1.js";import{t as b}from"./testComponentTL-6fcfc331.js";import{f as g}from"./findCustomEvents-18f41d5f.js";import"./shim-7e3475d3.js";import"./util-004fc0f1.js";import"./vue.runtime.esm-bundler-12250fee.js";import"./runtime-dom.esm-bundler-9a021e8b.js";import"./runtime-core.esm-bundler-8a2f4052.js";import"./reactivity.esm-bundler-91732a87.js";import"./index-7ea524dd.js";import"./index-93c19621.js";import"./index-37df3fb2.js";import"./client-eba7b630.js";import"./mobx.esm-c867959f.js";import"./jsxUtilities-a811c57a.js";const w="",i=(await v(`/src/views/${w}sidebarView.jsx`))?.SidebarView,l=(await v(`/src/vuejs/${w}sidebarPresenter.jsx`))?.Sidebar,f=(await v(`/src/reactjs/${w}sidebarPresenter.jsx`))?.Sidebar;describe("TW1.5 Presenter handles custom events and changes Model [final TW1 test Vue](/tw1.5.2.html)[React](/tw1.5.2-react.html)  [app Vue](/vue.html)[app React](/react.htm)",function(){let a;beforeEach(function(){a=void 0}),b({vue:l,react:f,mock:[{component:i,dummyText:"mock sidebar view"}]},{model:new Proxy({numberOfGuests:2,dishes:[],setNumberOfGuests(e){a=e}},c("Sidebar presenter, testing custom events"))},"$framework Sidebar presenter handles the onNumberChange custom event, changing the number of guests in the Model",function(n,y,s){t(n.queryByText(/mock sidebar view/),"sidebar presenter must always render sidebar view").to.be.ok,t(typeof s[0]?.propsHistory[0]?.onNumberChange).to.equal("function"),s[0]?.propsHistory[0]?.onNumberChange(3),t(a,"custom event should properly ask presenter to change guests").to.equal(3),s[0]?.propsHistory[0]?.onNumberChange(5),t(a,"custom event should properly ask presenter to change guests").to.equal(5)});const d=o.dishes3;let m,p;beforeEach(function(){m=p=void 0}),b({vue:l,react:f,mock:[{component:i,dummyText:"mock sidebar view"}]},{model:new Proxy({numberOfGuests:3,dishes:d,setCurrentDishId(e){m=e},removeFromMenu(e){p=e}},c("Sidebar presenter, testing custom events 2"))},"$framework Sidebar presenter handles the apropriate custom event fired by the View, setting current dish in the Model",function(n,y,s){const r=g(i,{number:5,dishes:d})?.a[0]?.customEventName;t(n.queryByText(/mock sidebar view/),"sidebar presenter must always render sidebar view").to.be.ok,t(s[0]?.propsHistory[0],"expecting sidebar presenter to pass props to SidebarView").to.be.ok,t(s[0]?.propsHistory[0][r],"custom event handler "+r+" should be a function").to.be.a("function"),s[0].propsHistory[0][r](o.dishes3[2]),t(m,"custom event handler "+r+" should set the current dish").to.equal(o.dishes3[2].id),t(p,"custom event handler "+r+" should not remove dish").to.be.undefined});let h,u;beforeEach(function(){h=u=void 0}),b({vue:l,react:f,mock:[{component:i,dummyText:"mock sidebar view"}]},{model:new Proxy({numberOfGuests:3,dishes:d,setCurrentDishId(e){h=e},removeFromMenu(e){u=e}},c("Sidebar presenter, testing custom events 3"))},"$framework Sidebar presenter handles the apropriate custom event fired by the View, removing the dish from the Model menu",function(n,y,s){const r=g(i,{number:5,dishes:d})?.button[2]?.customEventName;t(n.queryByText(/mock sidebar view/),"sidebar presenter must always render sidebar view").to.be.ok,t(s[0]?.propsHistory[0],"expecting sidebar presenter to pass props to SidebarView").to.be.ok,t(s[0]?.propsHistory[0][r],"custom event handler "+r+" should be a function").to.be.a("function"),s[0]?.propsHistory[0][r](o.dishes3[1]),t(u?.title,"custom event handler "+r+" should remove a dish").to.equal(o.dishes3[1].title),t(`id: ${u?.id}`,"custom event handler "+r+" should remove a dish").to.equal(`id: ${o.dishes3[1].id}`),t(h,"custom event handler "+r+" should not set current dish").to.be.undefined})});
