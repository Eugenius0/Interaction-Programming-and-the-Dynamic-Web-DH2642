import{e as t}from"./index-6400038e.js";import{w as D,d as i,a as b}from"./mockFetch-ba9030b0.js";import{b as c}from"./testComponentTL-6fcfc331.js";import{g as o}from"./filesToTest-e54ca7e1.js";import{f as y}from"./findCustomEvents-18f41d5f.js";import{c as w}from"./cloneModel-bb0f0793.js";import"./shim-7e3475d3.js";import"./util-004fc0f1.js";import"./vue.runtime.esm-bundler-12250fee.js";import"./runtime-dom.esm-bundler-9a021e8b.js";import"./runtime-core.esm-bundler-8a2f4052.js";import"./reactivity.esm-bundler-91732a87.js";import"./index-7ea524dd.js";import"./index-93c19621.js";import"./index-37df3fb2.js";import"./client-eba7b630.js";import"./mobx.esm-c867959f.js";import"./jsxUtilities-a811c57a.js";const r="",h=(await o(`/src/vuejs/${r}detailsPresenter.jsx`))?.Details,v=(await o(`/src/reactjs/${r}detailsPresenter.jsx`))?.Details,u=(await o(`/src/views/${r}detailsView.vue`))?.DetailsView||(await o(`/src/views/${r}detailsView.jsx`))?.DetailsView,x=w((await o(`/src/${r}DinnerModel.js`))?.model);describe("Bonus: current dish promise state in component state (remove model.currentDishPromiseState to enable) [test Vue](/tw2.5.1.html)[React](/tw2.5.1-react.html)",function(){this.timeout(2e5),before(function(){h||this.skip();let e=w(x);e?.searchResultsPromiseState||this.skip(),e?.currentDishPromiseState&&this.skip()});let n;async function m(e,V,s){t(e.queryByText(/no data/i),"when there is no currentDish, stateful Details presenter should show 'no data'").to.be.ok,D(b,function(){e.reactiveModel.currentDish=i.id}),await e.findByRole("img"),await e.findByText(/mock details view/),t(s[0]?.propsHistory[0]?.guests,"DetailsView guest prop must be read from the model").to.equal(3),t(s[0]?.propsHistory[0]?.isDishInMenu,"DetailsView isDishInMenu prop expected to be falsy with empty menu").to.not.be.ok,t(s[0]?.propsHistory[0]?.dishData.id,"DetailsView dishData prop expected to be the result of getDishDetails").to.equal(i.id),e.reactiveModel.dishes=[i],await e.findByText(/mock details view 2/),t(s[0]?.propsHistory[1]?.isDishInMenu,"DetailsView isDishInMenu prop expected to become truthy when the dish is added to the menu").to.be.ok;const a=y(u,{dishData:i,isDishInMenu:!0,guests:6}).button.filter(f=>f?.element?.props?.disabled)[0].customEventName;t(s[0]?.propsHistory[1][a],"expecting the custome event handler "+a+" to be a function").to.be.a("function"),s[0]?.propsHistory[1][a](),t(n.id,"expecting the custom event handler "+a+" to add the dish to the menu").to.equal(i.id)}const d={numberOfGuests:3,dishes:[],addToMenu(e){n=e}},l="$framework stateful Details presenter observes the reactive model and resolves a dish details promise in its state",p=[{component:u,dummyText:"mock details view"}];c({vue:h,mock:p},{model:{...d}},l,m),c({react:v,mock:p},{model:{...d}},l,m)});
