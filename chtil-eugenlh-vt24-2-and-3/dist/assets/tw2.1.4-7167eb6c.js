import"./dishesConst-c8e864fd.js";import{b as u,r as t,a as w}from"./teacherRender-7b65909b.js";import{g as o}from"./filesToTest-e54ca7e1.js";import"./shim-7e3475d3.js";import"./teacherFetch-a8835856.js";import"./mobx.esm-c867959f.js";import"./reactivity.esm-bundler-91732a87.js";const s="",l=w,E=(await o(`/src/${s}DinnerModel.js`))?.model,p=(await o(`/src/${l}js/${s}sidebarPresenter.jsx`))?.Sidebar,g=(await o(`/src/${l}js/${s}summaryPresenter.jsx`))?.Summary,n=u(E);let e=(await o(`/src/${s}dishSource.js`))?.getDishDetails;e||t(React.createElement("div",null,"Please write /src/dishSource.js and export getDishDetails"),document.getElementById("root"));if(e){window.getDishDetails=e;const i=1445969,c=1529625,m=32104,r=React.createElement("div",null,React.createElement("p",null," This is the TW2.1.4 getDishDetails test. It reads 3 dishes as 3 promises (see Promise.all) and, when all arrive, it saves them into the model"),React.createElement("p",null,"Check (and change in tw/tw2.1.4.jsx) the source code for other interesting dish IDs"),React.createElement("p",null,"getDishDetails is set as global by this test, so you can experiment with it at the Console."),React.createElement("p",null,"You can use the myModel object to examine the model at the Console."),React.createElement("hr",null));t(React.createElement("div",null,r,"Wait..."),document.getElementById("root")),Promise.all([e(i),e(c),e(m)]).then(function(a){t(React.createElement("div",null,r,React.createElement(p,{model:n}),React.createElement(g,{model:n})),document.getElementById("root")),window.myModel=n,a.forEach(function(h){window.myModel.addToMenu(h)}),window.myModel.setNumberOfGuests(5)}).catch(function(a){t(React.createElement("div",null,a),document.getElementById("root"))})}
